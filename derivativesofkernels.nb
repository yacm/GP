(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 14.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    200280,       4200]
NotebookOptionsPosition[    193814,       4087]
NotebookOutlinePosition[    194240,       4104]
CellTagsIndexPosition[    194197,       4101]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Derivatives", " ", "of", " ", "kernels"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Krbf", "[", 
    RowBox[{"x_", ",", "y_", ",", "\[Sigma]_", ",", "l_"}], "]"}], ":=", 
   RowBox[{
    SuperscriptBox["\[Sigma]", "2"], 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      FractionBox[
       RowBox[{"-", "1"}], "2"], 
      SuperscriptBox[
       RowBox[{"(", 
        FractionBox[
         RowBox[{"x", "-", "y"}], "l"], ")"}], "2"]}]]}]}]}]], "Input",
 CellChangeTimes->{{3.935660315876631*^9, 3.9356604475638*^9}, {
   3.9356604966424713`*^9, 3.935660626317937*^9}, {3.935660658545302*^9, 
   3.935660672446207*^9}, 3.935660738985339*^9, 3.935661377544506*^9, {
   3.9361696886995077`*^9, 3.936169708713779*^9}},
 CellLabel->
  "In[140]:=",ExpressionUUID->"c8ec0fed-e2f0-4481-b58d-b4905674fe2e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"D", "[", 
  RowBox[{
   RowBox[{"Krbf", "[", 
    RowBox[{"x", ",", "y", ",", "\[Sigma]", ",", "l"}], "]"}], ",", "l"}], 
  "]"}]], "Input",
 CellChangeTimes->{
  3.935661390404479*^9, {3.935833148331273*^9, 3.935833149433774*^9}, {
   3.935833209649984*^9, 3.935833211209854*^9}, {3.935866108807763*^9, 
   3.9358661107952414`*^9}, {3.9358663144158487`*^9, 3.93586631505906*^9}, {
   3.9361315516674547`*^9, 3.936131554072407*^9}},
 CellLabel->
  "In[141]:=",ExpressionUUID->"c32b1a8d-9714-4942-9648-c17105c31e23"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"x", "-", "y"}], ")"}], "2"], 
      RowBox[{"2", " ", 
       SuperscriptBox["l", "2"]}]]}]], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"x", "-", "y"}], ")"}], "2"], " ", 
   SuperscriptBox["\[Sigma]", "2"]}], 
  SuperscriptBox["l", "3"]]], "Output",
 CellChangeTimes->{{3.935660727634221*^9, 3.935660743133885*^9}, {
   3.935661391584332*^9, 3.935661396357477*^9}, 3.9358331531400433`*^9, 
   3.935833211665063*^9, {3.935866112023881*^9, 3.935866116652832*^9}, 
   3.935866315366777*^9, {3.9361315229153233`*^9, 3.936131554500259*^9}, 
   3.936141166570321*^9, 3.9361422689315557`*^9, 3.936169711306916*^9},
 CellLabel->
  "Out[141]=",ExpressionUUID->"d776ee8f-7a8b-498b-819f-df98d725e2c7"]
}, Open  ]],

Cell["Log-rbf kernel", "Text",
 CellChangeTimes->{{3.935661067667017*^9, 3.9356611001370687`*^9}, {
  3.935661438028709*^9, 3.935661440447619*^9}, {3.9356635201248426`*^9, 
  3.935663520355207*^9}},ExpressionUUID->"51616596-53f9-4009-ab83-\
f2dc0f0ee3f9"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Krbflog", "[", 
   RowBox[{"x_", ",", "y_", ",", "\[Sigma]_", ",", "l_"}], "]"}], ":=", 
  RowBox[{"Krbf", "[", 
   RowBox[{
    RowBox[{"Log", "[", "x", "]"}], ",", 
    RowBox[{"Log", "[", "y", "]"}], ",", "\[Sigma]", ",", "l"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.935660758320109*^9, 3.935660833424411*^9}, 
   3.935661380672164*^9, 3.935833501990039*^9},
 CellLabel->"In[17]:=",ExpressionUUID->"b7de652f-60bf-42e9-9a62-43661619b158"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"D", "[", 
  RowBox[{
   RowBox[{"Krbflog", "[", 
    RowBox[{"x", ",", "y", ",", "\[Sigma]", ",", "l"}], "]"}], ",", "l"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.935660846889752*^9, 3.935660847215528*^9}, 
   3.9356613839168243`*^9},
 CellLabel->"In[18]:=",ExpressionUUID->"ba9edf62-3884-4cc4-bb25-5a0774001ef1"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Log", "[", "x", "]"}], "-", 
         RowBox[{"Log", "[", "y", "]"}]}], ")"}], "2"], 
      RowBox[{"4", " ", 
       SuperscriptBox["l", "2"]}]]}]], " ", 
   SuperscriptBox["\[Sigma]", "2"], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Log", "[", "x", "]"}], "-", 
      RowBox[{"Log", "[", "y", "]"}]}], ")"}], "2"]}], 
  RowBox[{"2", " ", 
   SuperscriptBox["l", "3"]}]]], "Output",
 CellChangeTimes->{
  3.935660848192863*^9, 3.935661400552511*^9, {3.935833495602523*^9, 
   3.935833506698241*^9}},
 CellLabel->"Out[18]=",ExpressionUUID->"a06fa6a6-9c6f-4abc-bb5a-fad59c509946"]
}, Open  ]],

Cell["Combined kernel", "Text",
 CellChangeTimes->{{3.935661067667017*^9, 
  3.9356611001370687`*^9}},ExpressionUUID->"f10f4618-b7d9-4b12-8fcf-\
b94405ebfda4"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Sigma]m", "[", 
   RowBox[{"x_", ",", "s_"}], "]"}], ":=", 
  FractionBox["1", 
   RowBox[{"1", "+", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "s"}], 
      RowBox[{"(", 
       RowBox[{"x", "-", "0.1"}], ")"}]}]]}]]}], "\[IndentingNewLine]", 
 RowBox[{"D", "[", 
  RowBox[{
   RowBox[{"\[Sigma]m", "[", 
    RowBox[{"x", ",", "s"}], "]"}], ",", "s"}], "]"}]}], "Input",
 CellChangeTimes->{{3.9360413460265903`*^9, 3.936041371092194*^9}},
 CellLabel->
  "In[125]:=",ExpressionUUID->"c89993ed-3db7-4b2c-a89e-2202be33f9fd"],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "s"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "0.1`"}], "+", "x"}], ")"}]}]], " ", 
    RowBox[{"(", 
     RowBox[{"0.1`", "\[VeryThinSpace]", "-", "x"}], ")"}]}], 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "+", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "s"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "0.1`"}], "+", "x"}], ")"}]}]]}], ")"}], 
    "2"]]}]], "Output",
 CellChangeTimes->{3.936041371494578*^9},
 CellLabel->
  "Out[126]=",ExpressionUUID->"94b14662-653b-4446-8e5b-f1b48adec09c"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"Krbf", ",", "Krbflog", ",", "\[Sigma]m"}], "]"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.935834358509521*^9, 3.935834377730863*^9}, {
  3.9358484450919867`*^9, 3.935848457355098*^9}},
 CellLabel->
  "In[129]:=",ExpressionUUID->"f83eb818-874a-4a32-a79a-4309de2fd980"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Kcomb", "[", 
   RowBox[{
   "x_", ",", "y_", ",", "\[Sigma]1_", ",", "l1_", ",", "\[Sigma]2_", ",", 
    "l2_", ",", "s_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"\[Sigma]m", "[", 
     RowBox[{"x", ",", "s"}], "]"}], 
    RowBox[{"Krbf", "[", 
     RowBox[{"x", ",", "y", ",", "\[Sigma]1", ",", "l1"}], "]"}], 
    RowBox[{"\[Sigma]m", "[", 
     RowBox[{"y", ",", "s"}], "]"}]}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "-", 
      RowBox[{"\[Sigma]m", "[", 
       RowBox[{"x", ",", "s"}], "]"}]}], ")"}], 
    RowBox[{"Krbflog", "[", 
     RowBox[{"x", ",", "y", ",", "\[Sigma]2", ",", "l2"}], "]"}], 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      RowBox[{"\[Sigma]m", "[", 
       RowBox[{"y", ",", "s"}], "]"}]}], ")"}]}]}]}]], "Input",
 CellChangeTimes->{{3.935661105501712*^9, 3.935661142118778*^9}, {
   3.9356612504197206`*^9, 3.9356613409072247`*^9}, 3.9356613735997963`*^9, {
   3.935661405841784*^9, 3.935661420285046*^9}, {3.9356615239515533`*^9, 
   3.935661595129904*^9}, {3.935743751131653*^9, 3.935743768451531*^9}, {
   3.935833068312593*^9, 3.935833068760298*^9}, {3.935837403102079*^9, 
   3.9358374038661003`*^9}, {3.935840764698804*^9, 3.935840766126401*^9}, {
   3.9358408202147284`*^9, 3.935840825568797*^9}, {3.9358410900997543`*^9, 
   3.935841090939509*^9}, {3.9358484687974043`*^9, 3.9358484702421494`*^9}},
 CellLabel->
  "In[130]:=",ExpressionUUID->"8b3c98f0-b669-4d2c-9e09-470c8093fd65"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{"D", "[", 
   RowBox[{
    RowBox[{"Kcomb", "[", 
     RowBox[{
     "x", ",", "y", ",", "\[Sigma]1", ",", "l1", ",", "\[Sigma]2", ",", "l2", 
      ",", "s"}], "]"}], ",", "l1"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.935834478654439*^9, 3.935834539955241*^9}, {
  3.935841131974813*^9, 3.935841136622797*^9}, {3.9358443561191463`*^9, 
  3.9358443583034773`*^9}, {3.935847189773362*^9, 3.9358472037160807`*^9}, {
  3.935848373832963*^9, 3.9358484126608543`*^9}, {3.935848483083913*^9, 
  3.93584848528557*^9}, {3.936130858265358*^9, 3.936130860772402*^9}, {
  3.936142467858061*^9, 3.9361424763852654`*^9}},
 CellLabel->
  "In[139]:=",ExpressionUUID->"1325a58a-1c07-41ec-afd1-43d7ea75a775"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"x", "-", "y"}], ")"}], "2"], 
      RowBox[{"4", " ", 
       SuperscriptBox["l1", "2"]}]]}]], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"x", "-", "y"}], ")"}], "2"], " ", 
   SuperscriptBox["\[Sigma]1", "2"], " ", 
   RowBox[{"\[Sigma]m", "[", 
    RowBox[{"x", ",", "s"}], "]"}], " ", 
   RowBox[{"\[Sigma]m", "[", 
    RowBox[{"y", ",", "s"}], "]"}]}], 
  RowBox[{"2", " ", 
   SuperscriptBox["l1", "3"]}]]], "Output",
 CellChangeTimes->{
  3.9358344947818317`*^9, {3.9358345262645807`*^9, 3.935834540354988*^9}, 
   3.93584101056809*^9, 3.935841050757165*^9, 3.935841095571868*^9, 
   3.9358411379003067`*^9, {3.935844358904854*^9, 3.935844375861635*^9}, {
   3.935848390415442*^9, 3.935848413021428*^9}, {3.935848478113801*^9, 
   3.935848496469692*^9}, 3.936130861335677*^9, 3.9361424773224363`*^9},
 CellLabel->
  "Out[139]=",ExpressionUUID->"fc7dfeb9-5802-4929-b736-ae36657dcecb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"D", "[", 
  RowBox[{
   RowBox[{"Kcomb", "[", 
    RowBox[{
    "x", ",", "y", ",", "\[Sigma]1", ",", "l1", ",", "\[Sigma]2", ",", "l2", 
     ",", "s"}], "]"}], ",", "s"}], "]"}]], "Input",
 CellChangeTimes->{{3.935848763646254*^9, 
  3.935848764549017*^9}},ExpressionUUID->"857ee3cf-8195-4706-890f-\
006357de1a35"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", 
    RowBox[{"Krbflog", "[", 
     RowBox[{"x", ",", "y", ",", "\[Sigma]2", ",", "l2"}], "]"}]}], " ", 
   RowBox[{"(", 
    RowBox[{"1", "-", 
     RowBox[{"\[Sigma]m", "[", 
      RowBox[{"y", ",", "s"}], "]"}]}], ")"}], " ", 
   RowBox[{
    SuperscriptBox["\[Sigma]m", 
     TagBox[
      RowBox[{"(", 
       RowBox[{"0", ",", "1"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"x", ",", "s"}], "]"}]}], "+", 
  RowBox[{
   RowBox[{"Krbf", "[", 
    RowBox[{"x", ",", "y", ",", "\[Sigma]1", ",", "l1"}], "]"}], " ", 
   RowBox[{"\[Sigma]m", "[", 
    RowBox[{"y", ",", "s"}], "]"}], " ", 
   RowBox[{
    SuperscriptBox["\[Sigma]m", 
     TagBox[
      RowBox[{"(", 
       RowBox[{"0", ",", "1"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"x", ",", "s"}], "]"}]}], "-", 
  RowBox[{
   RowBox[{"Krbflog", "[", 
    RowBox[{"x", ",", "y", ",", "\[Sigma]2", ",", "l2"}], "]"}], " ", 
   RowBox[{"(", 
    RowBox[{"1", "-", 
     RowBox[{"\[Sigma]m", "[", 
      RowBox[{"x", ",", "s"}], "]"}]}], ")"}], " ", 
   RowBox[{
    SuperscriptBox["\[Sigma]m", 
     TagBox[
      RowBox[{"(", 
       RowBox[{"0", ",", "1"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"y", ",", "s"}], "]"}]}], "+", 
  RowBox[{
   RowBox[{"Krbf", "[", 
    RowBox[{"x", ",", "y", ",", "\[Sigma]1", ",", "l1"}], "]"}], " ", 
   RowBox[{"\[Sigma]m", "[", 
    RowBox[{"x", ",", "s"}], "]"}], " ", 
   RowBox[{
    SuperscriptBox["\[Sigma]m", 
     TagBox[
      RowBox[{"(", 
       RowBox[{"0", ",", "1"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"y", ",", "s"}], "]"}]}]}]], "Output",
 CellChangeTimes->{3.935848717741447*^9},
 CellLabel->
  "Out[120]=",ExpressionUUID->"c2677352-78b8-483e-a034-d686891b3c92"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"aux", "[", 
   RowBox[{"x_", ",", "s_"}], "]"}], ":=", 
  RowBox[{"-", 
   FractionBox[
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "s"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "0.1`"}], "+", "x"}], ")"}]}]], " ", 
     RowBox[{"(", 
      RowBox[{"0.1`", "\[VeryThinSpace]", "-", "x"}], ")"}]}], 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "s"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "0.1`"}], "+", "x"}], ")"}]}]]}], ")"}], 
     "2"]]}]}]], "Input",
 CellChangeTimes->{{3.9358371374885406`*^9, 3.935837170716823*^9}, 
   3.93584105982207*^9, 3.9358411009988327`*^9, 3.935841144322294*^9, {
   3.935844566542695*^9, 3.935844595201974*^9}, 3.935845889676587*^9},
 CellLabel->"In[98]:=",ExpressionUUID->"6675db56-4d68-4d58-927d-d6c011634403"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"aux", "[", 
     RowBox[{"x", ",", "100"}], "]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", ".2"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9358370921439753`*^9, 3.935837115887825*^9}, {
  3.9358371801425457`*^9, 3.935837243178323*^9}, {3.9358373028696737`*^9, 
  3.935837332276136*^9}, {3.93583736501197*^9, 3.935837391239463*^9}, {
  3.9358408350523863`*^9, 3.9358408617405*^9}, {3.93584102911937*^9, 
  3.935841039082059*^9}, {3.93584111822576*^9, 3.935841119470751*^9}, {
  3.9358411514556723`*^9, 3.935841152049292*^9}, {3.935841655357695*^9, 
  3.9358417146907673`*^9}, {3.935844421429782*^9, 3.9358444219120626`*^9}, {
  3.935844580655025*^9, 3.93584458166903*^9}, {3.935845897981476*^9, 
  3.935845943515993*^9}, {3.935846056516675*^9, 3.9358460666460743`*^9}, {
  3.9358465413213587`*^9, 3.935846572465804*^9}},
 CellLabel->
  "In[109]:=",ExpressionUUID->"bf5e950d-9346-476b-b599-23232c77f057"],

Cell[BoxData[
 GraphicsBox[
  InterpretationBox[{
    TagBox[{{{}, {}, 
       TagBox[
        {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2], 
         Opacity[1.], LineBox[CompressedData["
1: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
k+zGjJb0RsTHt0Ln//8vifkfm4IJuQ==
          "]]},
        Annotation[#, "Charting`Private`Tag#1"]& ]}, {}},
     {"WolframDynamicHighlight", <|
      "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
    StyleBox[
     DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
       Slot["HighlightElements"], 
       Slot["LayoutOptions"], 
       Slot["Meta"], 
       Charting`HighlightActionFunction["DynamicHighlight", {{{{}, {}, 
           Annotation[{
             Directive[
              Opacity[1.], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[2]], 
             Line[CompressedData["
1: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
k+zGjJb0RsTHt0Ln//8vifkfm4IJuQ==
              "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
         "LayoutOptions" -> <|
          "PanelPlotLayout" -> <||>, 
           "PlotRange" -> {{0, 0.2}, {-0.0022387146227458242`, 
             0.0022387149803483187`}}, 
           "Frame" -> {{False, False}, {False, False}}, 
           "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
           "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
           GoldenRatio^(-1), "DefaultStyle" -> {
             Directive[
              Opacity[1.], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[2]]}, 
           "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), 
             "ScalingFunctions" -> {{Identity, Identity}, {
               Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
           False|>, 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           Plot, "GroupHighlight" -> False|>|>]]& )[<|
       "HighlightElements" -> <|
         "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
        "LayoutOptions" -> <|
         "PanelPlotLayout" -> <||>, 
          "PlotRange" -> {{0, 0.2}, {-0.0022387146227458242`, 
            0.0022387149803483187`}}, 
          "Frame" -> {{False, False}, {False, False}}, "AxesOrigin" -> {0, 0},
           "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
          "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
          "DefaultStyle" -> {
            Directive[
             Opacity[1.], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2]]}, 
          "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& ), 
            "ScalingFunctions" -> {{Identity, Identity}, {
              Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>,
         "Meta" -> <|
         "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
          Plot, "GroupHighlight" -> False|>|>],
      ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
       4.503599627370496*^15, -4.503599627370496*^15}}],
     Selectable->False]},
   Annotation[{{{{}, {}, 
       Annotation[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2]], 
         Line[CompressedData["
1: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
k+zGjJb0RsTHt0Ln//8vifkfm4IJuQ==
          "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
    "HighlightElements" -> <|
      "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
     "LayoutOptions" -> <|
      "PanelPlotLayout" -> <||>, 
       "PlotRange" -> {{0, 0.2}, {-0.0022387146227458242`, 
         0.0022387149803483187`}}, 
       "Frame" -> {{False, False}, {False, False}}, "AxesOrigin" -> {0, 0}, 
       "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
       "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2]]}, 
       "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), 
         "ScalingFunctions" -> {{Identity, Identity}, {Identity, Identity}}|>,
        "Primitives" -> {}, "GCFlag" -> False|>, 
     "Meta" -> <|
      "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
       Plot, "GroupHighlight" -> False|>|>, "DynamicHighlight"]],
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 0.2}, {-0.0022387146227458242`, 0.0022387149803483187`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.935837125818771*^9, {3.935837189479068*^9, 3.9358372437758837`*^9}, {
   3.935837308221407*^9, 3.935837332576824*^9}, {3.935837365566017*^9, 
   3.935837411322916*^9}, 3.9358407734094563`*^9, {3.9358408287109747`*^9, 
   3.935840848882629*^9}, {3.9358410301604953`*^9, 3.935841063657643*^9}, {
   3.935841104801571*^9, 3.935841152544225*^9}, {3.935841664481668*^9, 
   3.935841715196495*^9}, 3.935844422464559*^9, {3.935844582538381*^9, 
   3.935844598313348*^9}, {3.9358458925878*^9, 3.935845944083112*^9}, {
   3.935846057047526*^9, 3.935846067413828*^9}, {3.935846543760708*^9, 
   3.935846572969822*^9}},
 CellLabel->
  "Out[109]=",ExpressionUUID->"dd180bc4-7e12-420f-869a-ebe4908d933b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 TemplateBox[{"\"interactive plot\"", "%72", 
   RowBox[{"DynamicModule", "[", 
     RowBox[{
       RowBox[{"{", 
         RowBox[{"xc", ",", "dx"}], "}"}], ",", 
       RowBox[{"Manipulate", "[", 
         RowBox[{
           RowBox[{"Plot", "[", 
             RowBox[{
               RowBox[{"aux", "[", 
                 RowBox[{"x", ",", "100"}], "]"}], ",", 
               RowBox[{"{", 
                 RowBox[{"x", ",", 
                   RowBox[{"xc", "-", "dx"}], ",", 
                   RowBox[{"xc", "+", "dx"}]}], "}"}]}], "]"}], ",", 
           RowBox[{"{", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"xc", ",", "0.1`", ",", "\"center\""}], "}"}], ",", 
               RowBox[{"-", "0.5000000000000001`"}], ",", 
               "0.7000000000000001`"}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"dx", ",", "0.1`", ",", "\"zoom\""}], "}"}], ",", 
               "0.6000000000000001`", ",", "0.006000000000000001`"}], "}"}]}],
          "]"}], ",", 
       RowBox[{"DynamicModuleValues", "\[RuleDelayed]", 
         RowBox[{"{", "}"}]}]}], "]"}]},
  "HiddenFunction",
  DisplayFunction->(FrameBox[
    DynamicModuleBox[{Typeset`open$$ = False}, 
     PaneSelectorBox[{False -> TagBox[
         GridBox[{{
            OpenerBox[
             Dynamic[Typeset`open$$]], 
            
            StyleBox[#, "SuggestionsBarHiddenFunctionLabel", StripOnInput -> 
             False], 
            StyleBox[#2, Plain, StripOnInput -> False]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
       True -> TagBox[
         GridBox[{{
            OpenerBox[
             Dynamic[Typeset`open$$]], 
            
            StyleBox[#, "SuggestionsBarHiddenFunctionLabel", StripOnInput -> 
             False], 
            StyleBox[#2, Plain, StripOnInput -> False]}, {"\"\"", 
            StyleBox[#3, ShowStringCharacters -> True], "\[SpanFromLeft]"}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
          GridBoxDividers -> {
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, FrameStyle -> {
            Dashing[{0, Small}], 
            GrayLevel[0.85]}], "Grid"]}, 
      Dynamic[Typeset`open$$, TrackedSymbols :> {Typeset`open$$}], ImageSize -> 
      Automatic], DynamicModuleValues :> {}], FrameStyle -> GrayLevel[0.85], 
    RoundingRadius -> 4, StripOnInput -> False]& ),
  Editable->False,
  InterpretationFunction->(#3& )]], "Input",
 NumberMarks->False,
 CellLabel->"In[73]:=",ExpressionUUID->"5f35e9bf-6704-456f-83ea-a6d764416dd7"],

Cell[BoxData[
 DynamicModuleBox[{$CellContext`xc$$, $CellContext`dx$$}, 
  TagBox[
   StyleBox[
    DynamicModuleBox[{$CellContext`dx$$ = 
     0.6000000000000001, $CellContext`xc$$ = 0.1, Typeset`show$$ = True, 
     Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
     Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
     "\"untitled\"", Typeset`specs$$ = {{{
        Hold[$CellContext`xc$$], 0.1, "center"}, -0.5000000000000001, 
       0.7000000000000001, ControlType -> Manipulator}, {{
        Hold[$CellContext`dx$$], 0.1, "zoom"}, 0.6000000000000001, 
       0.006000000000000001, ControlType -> Manipulator}}, Typeset`size$$ = {
     528., {160., 167.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
     Typeset`skipInitDone$$ = True}, 
     DynamicBox[Manipulate`ManipulateBoxes[
      1, StandardForm, 
       "Variables" :> {$CellContext`dx$$ = 0.1, $CellContext`xc$$ = 0.1}, 
       "ControllerVariables" :> {}, 
       "OtherVariables" :> {
        Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
         Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
         Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
         Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> Plot[
         $CellContext`aux[$CellContext`x, 
          100], {$CellContext`x, $CellContext`xc$$ - $CellContext`dx$$, \
$CellContext`xc$$ + $CellContext`dx$$}], 
       "Specifications" :> {{{$CellContext`xc$$, 0.1, 
           "center"}, -0.5000000000000001, 
          0.7000000000000001}, {{$CellContext`dx$$, 0.1, "zoom"}, 
          0.6000000000000001, 0.006000000000000001}}, "Options" :> {}, 
       "DefaultOptions" :> {}],
      ImageSizeCache->{594., {252., 261.}},
      SingleEvaluation->True],
     Deinitialization:>None,
     DynamicModuleValues:>{},
     SynchronousInitialization->True,
     UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
     UnsavedVariables:>{Typeset`initDone$$},
     UntrackedVariables:>{Typeset`size$$}], "Manipulate",
    Deployed->True,
    StripOnInput->False],
   Manipulate`InterpretManipulate[1]],
  DynamicModuleValues:>{}]], "Output",
 CellChangeTimes->{3.9358410771693087`*^9},
 CellLabel->"Out[73]=",ExpressionUUID->"96a51d03-85bb-4caf-ba98-1ebf6f4f27f4"]
}, Open  ]],

Cell["Derivatives", "Text",
 CellChangeTimes->{{3.935661067667017*^9, 3.9356611001370687`*^9}, {
  3.935833045359943*^9, 
  3.9358330476767282`*^9}},ExpressionUUID->"020975a1-402b-4b21-9769-\
3a7259175249"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{"D", "[", 
   RowBox[{
    RowBox[{"Kcomb", "[", 
     RowBox[{
     "x", ",", "y", ",", "s1", ",", "w1", ",", "s2", ",", "w2", ",", "s"}], 
     "]"}], ",", "s"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.9356616428859463`*^9, 3.9356616746848993`*^9}, {
  3.935743440405229*^9, 3.935743457614699*^9}, {3.9358329661574802`*^9, 
  3.9358329919413223`*^9}, {3.935834389997944*^9, 3.935834390935542*^9}},
 CellLabel->"In[25]:=",ExpressionUUID->"55293e28-543d-4d9d-b6fb-1459bd97c205"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"s", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "0.30000000000000004`"}], "+", "x", "+", 
            RowBox[{"2.`", " ", "y"}]}], ")"}]}]], " ", 
        RowBox[{"(", 
         RowBox[{"0.1`", "\[VeryThinSpace]", "-", 
          RowBox[{"1.`", " ", "x"}]}], ")"}]}], "+", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"s", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "0.30000000000000004`"}], "+", 
            RowBox[{"2", " ", "x"}], "+", "y"}], ")"}]}]], " ", 
        RowBox[{"(", 
         RowBox[{"0.1`", "\[VeryThinSpace]", "-", 
          RowBox[{"1.`", " ", "y"}]}], ")"}]}], "+", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"s", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "0.2`"}], "+", "x", "+", "y"}], ")"}]}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "0.2`"}], "+", "x", "+", "y"}], ")"}]}]}], ")"}], " ", 
     
     RowBox[{"Krbf", "[", 
      RowBox[{"x", ",", "y", ",", "s1", ",", "w1"}], "]"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"s", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "0.1`"}], "+", "x"}], ")"}]}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "0.1`"}], "+", "x"}], ")"}]}], "+", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"s", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "0.2`"}], "+", "x", "+", "y"}], ")"}]}]], " ", 
        RowBox[{"(", 
         RowBox[{"0.2`", "\[VeryThinSpace]", "-", 
          RowBox[{"1.`", " ", "x"}], "-", 
          RowBox[{"1.`", " ", "y"}]}], ")"}]}], "+", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"s", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "0.1`"}], "+", "y"}], ")"}]}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "0.1`"}], "+", "y"}], ")"}]}]}], ")"}], " ", 
     RowBox[{"Krbflog", "[", 
      RowBox[{"x", ",", "y", ",", "s2", ",", "w2"}], "]"}]}]}], ")"}], "/", 
  RowBox[{"(", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"s", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "0.1`"}], "+", "x"}], ")"}]}]]}], ")"}], "2"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"s", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "0.1`"}], "+", "y"}], ")"}]}]]}], ")"}], "2"]}], 
   ")"}]}]], "Output",
 CellChangeTimes->{{3.935661664931666*^9, 3.9356616753391523`*^9}, 
   3.93574345923155*^9, {3.935743757602892*^9, 3.935743781522764*^9}, {
   3.935832969480892*^9, 3.9358329925066433`*^9}, 3.9358330743198357`*^9, 
   3.935834391148526*^9},
 CellLabel->"Out[25]=",ExpressionUUID->"f58b785c-af75-44d5-94d1-cfaf4cabc634"]
}, Open  ]],

Cell["Combined kernel", "Text",
 CellChangeTimes->{{3.935661067667017*^9, 
  3.9356611001370687`*^9}},ExpressionUUID->"42e961ef-1454-40bf-ba0b-\
6b1c5ca27976"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"R", "[", 
   RowBox[{"z_", ",", "t_"}], "]"}], ":=", 
  RowBox[{"1", "/", 
   RowBox[{"Sqrt", "[", 
    RowBox[{"1", "-", 
     RowBox[{"2", "*", "z", "*", "t"}], "+", 
     RowBox[{"t", "^", "2"}]}], "]"}]}]}], "\n", 
 RowBox[{
  RowBox[{"F", "[", 
   RowBox[{"z_", ",", "t_", ",", "a_", ",", "b_"}], "]"}], ":=", 
  FractionBox["1", 
   RowBox[{
    RowBox[{"R", "[", 
     RowBox[{"z", ",", "t"}], "]"}], 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "-", "t", "+", 
       RowBox[{"R", "[", 
        RowBox[{"z", ",", "t"}], "]"}]}], ")"}], "a"], 
    RowBox[{"R", "[", 
     RowBox[{"z", ",", "t"}], "]"}], 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", "t", "+", 
       RowBox[{"R", "[", 
        RowBox[{"z", ",", "t"}], "]"}]}], ")"}], 
     "b"]}]]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Kjac", "[", 
   RowBox[{"x_", ",", "y_", ",", "s_", ",", "t_", ",", "a_", ",", "b_"}], 
   "]"}], ":=", 
  RowBox[{"s", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"x", "*", "y"}], ")"}], "a"], 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", "x"}], ")"}], 
      RowBox[{"(", 
       RowBox[{"1", "-", "y"}], ")"}]}], ")"}], "b"], 
   RowBox[{"F", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"2", "x"}], "-", "1"}], ",", "t", ",", "a", ",", "b"}], "]"}], 
   RowBox[{"F", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"2", "y"}], "-", "1"}], ",", "t", ",", "a", ",", "b"}], 
    "]"}]}]}], "\n"}], "Input",
 CellChangeTimes->{{3.9356621402580643`*^9, 3.93566216712431*^9}, {
  3.9356622303094263`*^9, 3.9356622324644947`*^9}, {3.935662391766678*^9, 
  3.9356624541689177`*^9}, {3.935662611352935*^9, 3.935662660512393*^9}, {
  3.9356627771077337`*^9, 3.935662985876041*^9}, {3.935663029776578*^9, 
  3.935663031113391*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"867a7973-f246-49ef-9f47-6283d076ab07"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"D", "[", 
  RowBox[{
   RowBox[{"Kjac", "[", 
    RowBox[{"x", ",", "y", ",", "s", ",", "t", ",", "a", ",", "b"}], "]"}], 
   ",", "b"}], "]"}]], "Input",
 CellChangeTimes->{{3.935662993838109*^9, 3.935663055235512*^9}},
 CellLabel->"In[26]:=",ExpressionUUID->"2e209185-5ef9-45ed-afc5-af4e287ae2b8"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", "s"}], " ", 
   RowBox[{"(", 
    RowBox[{"1", "+", 
     SuperscriptBox["t", "2"], "-", 
     RowBox[{"2", " ", "t", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{"2", " ", "x"}]}], ")"}]}]}], ")"}], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "-", "t", "+", 
      FractionBox["1", 
       SqrtBox[
        RowBox[{"1", "+", 
         SuperscriptBox["t", "2"], "-", 
         RowBox[{"2", " ", "t", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            RowBox[{"2", " ", "x"}]}], ")"}]}]}]]]}], ")"}], 
    RowBox[{"-", "a"}]], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "+", "t", "+", 
      FractionBox["1", 
       SqrtBox[
        RowBox[{"1", "+", 
         SuperscriptBox["t", "2"], "-", 
         RowBox[{"2", " ", "t", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            RowBox[{"2", " ", "x"}]}], ")"}]}]}]]]}], ")"}], 
    RowBox[{"-", "b"}]], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", "x"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"1", "-", "y"}], ")"}]}], ")"}], "b"], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"x", " ", "y"}], ")"}], "a"], " ", 
   RowBox[{"(", 
    RowBox[{"1", "+", 
     SuperscriptBox["t", "2"], "-", 
     RowBox[{"2", " ", "t", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{"2", " ", "y"}]}], ")"}]}]}], ")"}], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "-", "t", "+", 
      FractionBox["1", 
       SqrtBox[
        RowBox[{"1", "+", 
         SuperscriptBox["t", "2"], "-", 
         RowBox[{"2", " ", "t", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            RowBox[{"2", " ", "y"}]}], ")"}]}]}]]]}], ")"}], 
    RowBox[{"-", "a"}]], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "+", "t", "+", 
      FractionBox["1", 
       SqrtBox[
        RowBox[{"1", "+", 
         SuperscriptBox["t", "2"], "-", 
         RowBox[{"2", " ", "t", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            RowBox[{"2", " ", "y"}]}], ")"}]}]}]]]}], ")"}], 
    RowBox[{"-", "b"}]], " ", 
   RowBox[{"Log", "[", 
    RowBox[{"1", "+", "t", "+", 
     FractionBox["1", 
      SqrtBox[
       RowBox[{"1", "+", 
        SuperscriptBox["t", "2"], "-", 
        RowBox[{"2", " ", "t", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           RowBox[{"2", " ", "x"}]}], ")"}]}]}]]]}], "]"}]}], "+", 
  RowBox[{"s", " ", 
   RowBox[{"(", 
    RowBox[{"1", "+", 
     SuperscriptBox["t", "2"], "-", 
     RowBox[{"2", " ", "t", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{"2", " ", "x"}]}], ")"}]}]}], ")"}], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "-", "t", "+", 
      FractionBox["1", 
       SqrtBox[
        RowBox[{"1", "+", 
         SuperscriptBox["t", "2"], "-", 
         RowBox[{"2", " ", "t", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            RowBox[{"2", " ", "x"}]}], ")"}]}]}]]]}], ")"}], 
    RowBox[{"-", "a"}]], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "+", "t", "+", 
      FractionBox["1", 
       SqrtBox[
        RowBox[{"1", "+", 
         SuperscriptBox["t", "2"], "-", 
         RowBox[{"2", " ", "t", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            RowBox[{"2", " ", "x"}]}], ")"}]}]}]]]}], ")"}], 
    RowBox[{"-", "b"}]], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", "x"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"1", "-", "y"}], ")"}]}], ")"}], "b"], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"x", " ", "y"}], ")"}], "a"], " ", 
   RowBox[{"(", 
    RowBox[{"1", "+", 
     SuperscriptBox["t", "2"], "-", 
     RowBox[{"2", " ", "t", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{"2", " ", "y"}]}], ")"}]}]}], ")"}], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "-", "t", "+", 
      FractionBox["1", 
       SqrtBox[
        RowBox[{"1", "+", 
         SuperscriptBox["t", "2"], "-", 
         RowBox[{"2", " ", "t", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            RowBox[{"2", " ", "y"}]}], ")"}]}]}]]]}], ")"}], 
    RowBox[{"-", "a"}]], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "+", "t", "+", 
      FractionBox["1", 
       SqrtBox[
        RowBox[{"1", "+", 
         SuperscriptBox["t", "2"], "-", 
         RowBox[{"2", " ", "t", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            RowBox[{"2", " ", "y"}]}], ")"}]}]}]]]}], ")"}], 
    RowBox[{"-", "b"}]], " ", 
   RowBox[{"Log", "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "-", "x"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"1", "-", "y"}], ")"}]}], "]"}]}], "-", 
  RowBox[{"s", " ", 
   RowBox[{"(", 
    RowBox[{"1", "+", 
     SuperscriptBox["t", "2"], "-", 
     RowBox[{"2", " ", "t", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{"2", " ", "x"}]}], ")"}]}]}], ")"}], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "-", "t", "+", 
      FractionBox["1", 
       SqrtBox[
        RowBox[{"1", "+", 
         SuperscriptBox["t", "2"], "-", 
         RowBox[{"2", " ", "t", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            RowBox[{"2", " ", "x"}]}], ")"}]}]}]]]}], ")"}], 
    RowBox[{"-", "a"}]], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "+", "t", "+", 
      FractionBox["1", 
       SqrtBox[
        RowBox[{"1", "+", 
         SuperscriptBox["t", "2"], "-", 
         RowBox[{"2", " ", "t", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            RowBox[{"2", " ", "x"}]}], ")"}]}]}]]]}], ")"}], 
    RowBox[{"-", "b"}]], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", "x"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"1", "-", "y"}], ")"}]}], ")"}], "b"], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"x", " ", "y"}], ")"}], "a"], " ", 
   RowBox[{"(", 
    RowBox[{"1", "+", 
     SuperscriptBox["t", "2"], "-", 
     RowBox[{"2", " ", "t", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{"2", " ", "y"}]}], ")"}]}]}], ")"}], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "-", "t", "+", 
      FractionBox["1", 
       SqrtBox[
        RowBox[{"1", "+", 
         SuperscriptBox["t", "2"], "-", 
         RowBox[{"2", " ", "t", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            RowBox[{"2", " ", "y"}]}], ")"}]}]}]]]}], ")"}], 
    RowBox[{"-", "a"}]], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "+", "t", "+", 
      FractionBox["1", 
       SqrtBox[
        RowBox[{"1", "+", 
         SuperscriptBox["t", "2"], "-", 
         RowBox[{"2", " ", "t", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            RowBox[{"2", " ", "y"}]}], ")"}]}]}]]]}], ")"}], 
    RowBox[{"-", "b"}]], " ", 
   RowBox[{"Log", "[", 
    RowBox[{"1", "+", "t", "+", 
     FractionBox["1", 
      SqrtBox[
       RowBox[{"1", "+", 
        SuperscriptBox["t", "2"], "-", 
        RowBox[{"2", " ", "t", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           RowBox[{"2", " ", "y"}]}], ")"}]}]}]]]}], "]"}]}]}]], "Output",
 CellChangeTimes->{{3.935663036759451*^9, 3.9356630557084217`*^9}},
 CellLabel->"Out[26]=",ExpressionUUID->"fd508433-b004-4548-94ea-600ed5627cdd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"X", "^", "2"}], "-", "1"}], "==", "0"}], ",", "X"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.935670518179022*^9, 3.935670537531109*^9}},
 CellLabel->"In[27]:=",ExpressionUUID->"14035265-251e-4b79-9b67-4e2e53e9e0b5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"X", "\[Rule]", 
     RowBox[{"-", "1"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"X", "\[Rule]", "1"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.9356705379945087`*^9},
 CellLabel->"Out[27]=",ExpressionUUID->"1379fe54-e346-4de3-9a73-349a9cef045c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Like", "[", 
   RowBox[{"x_", ",", "\[Theta]_", ",", "\[Phi]_"}], "]"}], ":=", 
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{"-", 
    RowBox[{"nlpEvidence", "[", 
     RowBox[{"x", ",", "\[Theta]", ",", "\[Phi]"}], 
     "]"}]}]]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"prior", "[", 
   RowBox[{"x_", ",", "\[Theta]_", ",", "\[Phi]_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"lognormal", "[", 
    RowBox[{"x", ",", "\[Phi]"}], "]"}], 
   RowBox[{"lognormal", "[", 
    RowBox[{"x", ",", "\[Theta]"}], "]"}], 
   RowBox[{"normal", "[", 
    RowBox[{"x", ",", "\[Theta]"}], "]"}], 
   RowBox[{"normal", "[", 
    RowBox[{"x", ",", "\[Phi]"}], "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"post", "[", 
   RowBox[{"x_", ",", "\[Theta]_", ",", "\[Phi]_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"Like", "[", 
    RowBox[{"x", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], 
   RowBox[{"prior", "[", 
    RowBox[{"x", ",", "\[Theta]", ",", "\[Phi]"}], 
    "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Potential", "[", 
   RowBox[{"x_", ",", "\[Theta]_", ",", "\[Phi]_"}], "]"}], ":=", 
  RowBox[{"-", 
   RowBox[{"Log", "[", 
    RowBox[{"post", "[", 
     RowBox[{"x", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], 
    "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"Simplify", "[", 
  RowBox[{"D", "[", 
   RowBox[{
    RowBox[{"Potential", "[", 
     RowBox[{"x", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], ",", "\[Phi]"}], 
   "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"PDF", "[", 
     RowBox[{"LogNormalDistribution", "[", 
      RowBox[{"\[Mu]1", ",", "\[Sigma]1"}], "]"}], "]"}], 
    RowBox[{"PDF", "[", 
     RowBox[{"LogNormalDistribution", "[", 
      RowBox[{"\[Mu]", ",", "\[Sigma]"}], "]"}], "]"}]}], "*)"}]}]}], "Input",\

 CellChangeTimes->{{3.935742296784449*^9, 3.935742346532127*^9}, {
   3.935742383815845*^9, 3.935742384226173*^9}, {3.935742423485035*^9, 
   3.93574246898195*^9}, {3.935742510033202*^9, 3.935742514394837*^9}, 
   3.93574258376964*^9, {3.935742632759953*^9, 3.935742634711851*^9}, {
   3.9357428982846537`*^9, 3.935743009183394*^9}, 3.936170955093576*^9, 
   3.936171012263114*^9, {3.936171124924181*^9, 3.93617124192257*^9}, {
   3.936172515543312*^9, 3.9361725280757093`*^9}, {3.93617263056774*^9, 
   3.936172686084469*^9}, {3.936172828227687*^9, 3.936172965946398*^9}, {
   3.936172996639468*^9, 3.936173025326425*^9}, {3.9361737761802807`*^9, 
   3.936173776959676*^9}, {3.936173809499626*^9, 3.936173810960795*^9}, {
   3.936174008373752*^9, 3.936174018988834*^9}, {3.936174406439744*^9, 
   3.9361744221002817`*^9}, {3.936272721557209*^9, 3.936272758744994*^9}, {
   3.9362728295851088`*^9, 3.9362728339625587`*^9}},
 CellLabel->
  "In[218]:=",ExpressionUUID->"a237cbd2-886c-4e82-abff-1b789e97a6a1"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox[
    RowBox[{
     SuperscriptBox["lognormal", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"0", ",", "1"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"x", ",", "\[Phi]"}], "]"}], 
    RowBox[{"lognormal", "[", 
     RowBox[{"x", ",", "\[Phi]"}], "]"}]]}], "-", 
  FractionBox[
   RowBox[{
    SuperscriptBox["normal", 
     TagBox[
      RowBox[{"(", 
       RowBox[{"0", ",", "1"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"x", ",", "\[Phi]"}], "]"}], 
   RowBox[{"normal", "[", 
    RowBox[{"x", ",", "\[Phi]"}], "]"}]], "+", 
  RowBox[{
   SuperscriptBox["nlpEvidence", 
    TagBox[
     RowBox[{"(", 
      RowBox[{"0", ",", "0", ",", "1"}], ")"}],
     Derivative],
    MultilineFunction->None], "[", 
   RowBox[{"x", ",", "\[Theta]", ",", "\[Phi]"}], "]"}]}]], "Output",
 CellChangeTimes->{
  3.935742911063808*^9, 3.935742947887417*^9, {3.9357429860316763`*^9, 
   3.9357430103626623`*^9}, 3.936173027177741*^9, 3.936173778044923*^9, 
   3.936173811934333*^9, 3.93617401955287*^9, {3.936174407092832*^9, 
   3.936174422441916*^9}, {3.9362727342672653`*^9, 3.936272759441263*^9}, 
   3.936272834828376*^9},
 CellLabel->
  "Out[222]=",ExpressionUUID->"d40e48ae-0e9d-4375-b679-5a1d8035c0af"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{"D", "[", 
   RowBox[{
    RowBox[{"Post", "[", 
     RowBox[{"x", ",", "\[Theta]"}], "]"}], ",", "\[Theta]"}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.935742290605173*^9, 3.935742291124963*^9}, {
  3.935742472791977*^9, 3.935742488162661*^9}, {3.935742655289076*^9, 
  3.935742667510806*^9}, {3.935742861288575*^9, 3.935742893014029*^9}, {
  3.93574299124829*^9, 3.9357429923656063`*^9}},
 CellLabel->"In[36]:=",ExpressionUUID->"e3369dba-7087-4d27-90a2-35901f5264f3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", 
      RowBox[{"Evi", "[", 
       RowBox[{"x", ",", "\[Theta]"}], "]"}]}], "-", 
     RowBox[{"Evi1", "[", 
      RowBox[{"x", ",", "\[Theta]"}], "]"}], "-", 
     RowBox[{"Evi2", "[", 
      RowBox[{"x", ",", "\[Theta]"}], "]"}]}]]}], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     SuperscriptBox["Evi", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"0", ",", "1"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"x", ",", "\[Theta]"}], "]"}], "+", 
    RowBox[{
     SuperscriptBox["Evi1", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"0", ",", "1"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"x", ",", "\[Theta]"}], "]"}], "+", 
    RowBox[{
     SuperscriptBox["Evi2", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"0", ",", "1"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"x", ",", "\[Theta]"}], "]"}]}], ")"}]}]], "Output",
 CellChangeTimes->{
  3.9357424887150793`*^9, {3.9357426591115294`*^9, 3.93574266802175*^9}, {
   3.935742993237968*^9, 3.935743013034953*^9}},
 CellLabel->"Out[36]=",ExpressionUUID->"6803036f-5bc5-4392-aba7-7f6ca07e340d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", 
  RowBox[{"a", ",", "b"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"D", "[", 
  RowBox[{
   RowBox[{
    SuperscriptBox["x", "a"], 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "-", "x"}], ")"}], "b"]}], ",", "x"}], "]"}]}], "Input",
 CellChangeTimes->{{3.9361266899831443`*^9, 3.9361267256670017`*^9}, {
  3.9361267691826*^9, 3.936126769549748*^9}, {3.936535172483645*^9, 
  3.9365351840504103`*^9}},
 CellLabel->
  "In[168]:=",ExpressionUUID->"e040b81c-3bec-4aaa-97a5-9989559b907f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"a", " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "-", "x"}], ")"}], "b"], " ", 
   SuperscriptBox["x", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "a"}]]}], "-", 
  RowBox[{"b", " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "-", "x"}], ")"}], 
    RowBox[{
     RowBox[{"-", "1"}], "+", "b"}]], " ", 
   SuperscriptBox["x", "a"]}]}]], "Output",
 CellChangeTimes->{
  3.9361267259350867`*^9, 3.936126770010559*^9, {3.936535173208055*^9, 
   3.936535185190565*^9}},
 CellLabel->
  "Out[169]=",ExpressionUUID->"570678d4-733d-4fca-ac8b-9f6c679480ca"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"logNormal", "[", 
   RowBox[{"x_", ",", "\[Sigma]_", ",", "\[Mu]_"}], "]"}], ":=", 
  RowBox[{
   FractionBox["1", 
    RowBox[{"x", " ", "\[Sigma]", 
     SqrtBox[
      RowBox[{"2", "\[Pi]"}]]}]], 
   SuperscriptBox["\[ExponentialE]", 
    FractionBox[
     RowBox[{"-", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Log", "[", "x", "]"}], "-", "\[Mu]"}], ")"}], "2"]}], 
     RowBox[{"2", " ", 
      SuperscriptBox["\[Sigma]", "2"]}]]]}]}]], "Input",
 CellChangeTimes->{{3.9361747423207607`*^9, 3.936174765181847*^9}, {
  3.936174825395109*^9, 3.9361749034206448`*^9}},
 CellLabel->
  "In[225]:=",ExpressionUUID->"2ef5416a-640e-480d-9cc4-0fa7e03fdbe4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{"D", "[", 
   RowBox[{
    RowBox[{"logNormal", "[", 
     RowBox[{
      RowBox[{"x", "+", "\[Epsilon]"}], ",", "\[Sigma]", ",", "\[Mu]"}], 
     "]"}], ",", "x"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.936174914043231*^9, 3.93617496554683*^9}, {
  3.9361797139810963`*^9, 3.9361797145221777`*^9}, {3.936200364677483*^9, 
  3.936200366020143*^9}, {3.9362779356902037`*^9, 3.9362779385635777`*^9}, {
  3.936278050639792*^9, 3.9362780517080727`*^9}},
 CellLabel->
  "In[227]:=",ExpressionUUID->"09d32efe-0637-4a6e-a0d0-2276755999ae"],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"-", 
      FractionBox[
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"\[Mu]", "-", 
          RowBox[{"Log", "[", 
           RowBox[{"x", "+", "\[Epsilon]"}], "]"}]}], ")"}], "2"], 
       RowBox[{"2", " ", 
        SuperscriptBox["\[Sigma]", "2"]}]]}]], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "\[Mu]"}], "+", 
      SuperscriptBox["\[Sigma]", "2"], "+", 
      RowBox[{"Log", "[", 
       RowBox[{"x", "+", "\[Epsilon]"}], "]"}]}], ")"}]}], 
   RowBox[{
    SqrtBox[
     RowBox[{"2", " ", "\[Pi]"}]], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"x", "+", "\[Epsilon]"}], ")"}], "2"], " ", 
    SuperscriptBox["\[Sigma]", "3"]}]]}]], "Output",
 CellChangeTimes->{{3.936174934807719*^9, 3.936174965921947*^9}, 
   3.9362003671862907`*^9, {3.936277939054755*^9, 3.936277952828318*^9}, 
   3.936278052924221*^9},
 CellLabel->
  "Out[227]=",ExpressionUUID->"27c65a92-5b8f-4ca7-aceb-fdb24f1b82c5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{"D", "[", 
   RowBox[{
    RowBox[{"logNormal", "[", 
     RowBox[{
      RowBox[{"x", "+", "\[Epsilon]"}], ",", "\[Sigma]", ",", "\[Mu]"}], 
     "]"}], ",", "\[Sigma]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.9361797198899517`*^9, 3.936179721193417*^9}, {
  3.9362002951349688`*^9, 3.936200296310354*^9}},
 CellLabel->
  "In[180]:=",ExpressionUUID->"b030529f-ab51-44c1-aea3-f8d73a2f554d"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"\[Mu]", "-", 
         RowBox[{"Log", "[", 
          RowBox[{"x", "+", "\[Epsilon]"}], "]"}]}], ")"}], "2"], 
      RowBox[{"2", " ", 
       SuperscriptBox["\[Sigma]", "2"]}]]}]], " ", 
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox["\[Mu]", "2"], "-", 
     SuperscriptBox["\[Sigma]", "2"], "-", 
     RowBox[{"2", " ", "\[Mu]", " ", 
      RowBox[{"Log", "[", 
       RowBox[{"x", "+", "\[Epsilon]"}], "]"}]}], "+", 
     SuperscriptBox[
      RowBox[{"Log", "[", 
       RowBox[{"x", "+", "\[Epsilon]"}], "]"}], "2"]}], ")"}]}], 
  RowBox[{
   SqrtBox[
    RowBox[{"2", " ", "\[Pi]"}]], " ", 
   RowBox[{"(", 
    RowBox[{"x", "+", "\[Epsilon]"}], ")"}], " ", 
   SuperscriptBox["\[Sigma]", "4"]}]]], "Output",
 CellChangeTimes->{3.936179721943149*^9, 3.936200296926691*^9},
 CellLabel->
  "Out[180]=",ExpressionUUID->"02923bb1-c12b-45b2-b5e0-9171cb35f7fd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"normal", "[", 
   RowBox[{"x_", ",", "\[Sigma]_", ",", "\[Mu]_"}], "]"}], ":=", 
  RowBox[{
   FractionBox["1", 
    SqrtBox[
     RowBox[{"\[Sigma]", " ", "2", "\[Pi]"}]]], 
   SuperscriptBox["\[ExponentialE]", 
    FractionBox[
     RowBox[{"-", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"x", "-", "\[Mu]"}], ")"}], "2"]}], 
     RowBox[{"2", " ", 
      SuperscriptBox["\[Sigma]", "2"]}]]]}]}], "\[IndentingNewLine]", 
 RowBox[{"D", "[", 
  RowBox[{
   RowBox[{"normal", "[", 
    RowBox[{"x", ",", "\[Sigma]", ",", "\[Mu]"}], "]"}], ",", "x"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.936283465993877*^9, 3.9362834892018538`*^9}, {
  3.936285737919588*^9, 3.9362857436462507`*^9}, {3.936285862122848*^9, 
  3.936285913131166*^9}},
 CellLabel->
  "In[233]:=",ExpressionUUID->"6edb5194-d701-4cd2-88a4-68c0ae7add0f"],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"-", 
      FractionBox[
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"x", "-", "\[Mu]"}], ")"}], "2"], 
       RowBox[{"2", " ", 
        SuperscriptBox["\[Sigma]", "2"]}]]}]], " ", 
    RowBox[{"(", 
     RowBox[{"x", "-", "\[Mu]"}], ")"}]}], 
   RowBox[{
    SqrtBox[
     RowBox[{"2", " ", "\[Pi]"}]], " ", 
    SuperscriptBox["\[Sigma]", 
     RowBox[{"5", "/", "2"}]]}]]}]], "Output",
 CellChangeTimes->{
  3.9362858598196383`*^9, {3.936285896713595*^9, 3.936285914102319*^9}},
 CellLabel->
  "Out[234]=",ExpressionUUID->"92b65432-2e47-4e5f-82d6-2c5988d1f961"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"a", "=", 
  RowBox[{"-", "0.99"}]}], "\[IndentingNewLine]", 
 RowBox[{"b", "=", 
  RowBox[{"-", "0.99"}]}], "\[IndentingNewLine]", 
 RowBox[{"m", "=", 
  RowBox[{"1", "/", "5"}]}], "\[IndentingNewLine]", 
 RowBox[{"b1", "=", 
  RowBox[{"-", "1"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Betadist", "[", 
   RowBox[{"x_", ",", "a_", ",", "b_"}], "]"}], ":=", 
  FractionBox[
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox["x", "a"], 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "-", "x"}], ")"}], "b"]}], ")"}], 
   RowBox[{"Beta", "[", 
    RowBox[{
     RowBox[{"a", "+", "1"}], ",", 
     RowBox[{"b", "+", "1"}]}], "]"}]]}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Betadist", "[", 
      RowBox[{
       RowBox[{"m", 
        RowBox[{"(", 
         RowBox[{"x", "-", "b1"}], ")"}]}], ",", "a", ",", "b"}], "]"}], ",", 
     
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"-", 
       RowBox[{"Betadist", "[", 
        RowBox[{
         RowBox[{"m", 
          RowBox[{"(", 
           RowBox[{"x", "-", "b1"}], ")"}]}], ",", "a", ",", "b"}], 
        "]"}]}]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "1"}], ",", "5"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", ".5"}], ",", "2.3"}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.936468894198722*^9, 3.936469085025769*^9}, {
  3.936469125912739*^9, 3.936469168125991*^9}, {3.9364692117619247`*^9, 
  3.936469330244006*^9}, {3.936469367311385*^9, 3.93646936817874*^9}, {
  3.936469407719285*^9, 3.936469456531129*^9}, {3.936471240448235*^9, 
  3.936471487917665*^9}, {3.936471697173263*^9, 3.9364717023207273`*^9}},
 CellLabel->
  "In[184]:=",ExpressionUUID->"d7ee2e85-2e45-4b0e-a85f-8ffa8eb834d3"],

Cell[BoxData[
 RowBox[{"-", "0.99`"}]], "Output",
 CellChangeTimes->{{3.9364690181425734`*^9, 3.936469086210441*^9}, {
   3.936469136421233*^9, 3.936469164283023*^9}, 3.936469213183174*^9, 
   3.9364692774798613`*^9, {3.9364693156429768`*^9, 3.936469332314714*^9}, 
   3.936469368360224*^9, {3.936469433310804*^9, 3.9364694568606787`*^9}, {
   3.936471251176914*^9, 3.936471308547865*^9}, {3.9364713419031897`*^9, 
   3.9364713733699303`*^9}, {3.9364714346892853`*^9, 3.936471488705184*^9}, 
   3.936471703131806*^9, 3.9365355294261436`*^9},
 CellLabel->
  "Out[184]=",ExpressionUUID->"583a1fce-606d-4469-99c9-a6422dc1a129"],

Cell[BoxData[
 RowBox[{"-", "0.99`"}]], "Output",
 CellChangeTimes->{{3.9364690181425734`*^9, 3.936469086210441*^9}, {
   3.936469136421233*^9, 3.936469164283023*^9}, 3.936469213183174*^9, 
   3.9364692774798613`*^9, {3.9364693156429768`*^9, 3.936469332314714*^9}, 
   3.936469368360224*^9, {3.936469433310804*^9, 3.9364694568606787`*^9}, {
   3.936471251176914*^9, 3.936471308547865*^9}, {3.9364713419031897`*^9, 
   3.9364713733699303`*^9}, {3.9364714346892853`*^9, 3.936471488705184*^9}, 
   3.936471703131806*^9, 3.936535529427009*^9},
 CellLabel->
  "Out[185]=",ExpressionUUID->"f8d4379c-06f9-4587-865b-0fef7644e7f7"],

Cell[BoxData[
 FractionBox["1", "5"]], "Output",
 CellChangeTimes->{{3.9364690181425734`*^9, 3.936469086210441*^9}, {
   3.936469136421233*^9, 3.936469164283023*^9}, 3.936469213183174*^9, 
   3.9364692774798613`*^9, {3.9364693156429768`*^9, 3.936469332314714*^9}, 
   3.936469368360224*^9, {3.936469433310804*^9, 3.9364694568606787`*^9}, {
   3.936471251176914*^9, 3.936471308547865*^9}, {3.9364713419031897`*^9, 
   3.9364713733699303`*^9}, {3.9364714346892853`*^9, 3.936471488705184*^9}, 
   3.936471703131806*^9, 3.9365355294276953`*^9},
 CellLabel->
  "Out[186]=",ExpressionUUID->"2e3d8858-9d70-4ef3-b186-5a561780f0ae"],

Cell[BoxData[
 RowBox[{"-", "1"}]], "Output",
 CellChangeTimes->{{3.9364690181425734`*^9, 3.936469086210441*^9}, {
   3.936469136421233*^9, 3.936469164283023*^9}, 3.936469213183174*^9, 
   3.9364692774798613`*^9, {3.9364693156429768`*^9, 3.936469332314714*^9}, 
   3.936469368360224*^9, {3.936469433310804*^9, 3.9364694568606787`*^9}, {
   3.936471251176914*^9, 3.936471308547865*^9}, {3.9364713419031897`*^9, 
   3.9364713733699303`*^9}, {3.9364714346892853`*^9, 3.936471488705184*^9}, 
   3.936471703131806*^9, 3.93653552942834*^9},
 CellLabel->
  "Out[187]=",ExpressionUUID->"0ee91981-cd37-46b1-8ccf-cc33071fe4df"],

Cell[BoxData[
 GraphicsBox[
  InterpretationBox[{
    TagBox[{{{}, {}, 
       TagBox[
        {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2], 
         Opacity[1.], LineBox[CompressedData["
1:eJw12nc41f//P3B7c7TwLi3ZSZKQ9XiqjBRSmSUlhBCZKUJFpZScY++99w4v
MyRCMjKyV/Y89vf1+V3X7/xxznW7rtc5z9frOe6P5/O6zknjJzdNqSgoKPzw
t/993hEYj3BIm8fM/t+LCh3vvNj7IWEe29+qF61zkBIN0zwseBY4jylGsPFV
ae9A4vkPn8x85jGZIwbKMoUbYGlcYHHLZR4rZZO7NDWyBmf8By4ji3ksIlOT
wTJmBRYw+mNnDOaxndGknaj6JcifEyP/d20eY4oclLSTWwTnowbtdHJ4e/eu
zPr1zoPM9VfpyyLzGHGhT84iYhZ2XdO9B4/OYzNzHaVOaf+gKuX3/Wa2eexV
w9Eml/UpeN29K1O6N4d9rT23/tZpElTpBQ8lLcxhkS8fvT59YgKYJbXmA4bm
sNon4ZPps2PQYuLa6NE+h133ql/I6hmFLwFxcdY1c5hkBv3Dvr8joF39w80g
fw5juPGiMW57GLgWV3VVEuYwrRSXlENnhqHv+HFxicA5jGerN7nCZgiiNVRZ
TvrMYX1x9AGfsEF46GY3zuoyhzmtPD3+/egg8KeHVm6az2Gp6/7kEcJfmP5T
EzqhP4eRmRu5vDb6IZNx1qFDbQ4TM77CL7fWB3bSHJpVsnOYQpy8qzBNH5BJ
5tRhR/Hfm/tqd0H9D5TV+vf7sM1hhxhJykFveuDlcmmRw94slrEjLZDS2A10
WqxWGkOz2Aw5smnTtgu+v5RUlm2fxdgKDBw/tHfCx0yjE4I1s1gWD92MpVwn
HGTJ7aBMwL8/ENj8hf83dMv0Zs6RZjH3q6oCdQkdEGZB867Xexbj1K5x33+6
A3jqdeQLzGcxGosqaW3lXzC++pIzVn8Wy8m2yPnY2w4pvCmLfmqzWBNtp6qp
YzuIeW0lmIvMYsKeMlvfC9pgJZvXQ/voLHb3v/a0jjttUPRX3eAS2yzmnxJn
b0/bBgry0WzcCzOYw6kErQjjVqCyapxkGJrBeivSexoOtUJd6FL1atsMpt/z
WDEg6CdcJ19x/pk3gxmUvKO6/7IF2AVstMriZ7DMF9E9EZvN8Es76HQKaQbj
6pz2sXRtBoO8qb9ezjNYNLf493rvH/DIxk9VUnYGyxKmDaNo/g7J1SbeA8Iz
mOK/PSrSve8wySFb6314BkOeXO01y41gjk1A18Y/bNnqY5iiYCNYsitKuRT/
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
etEzTUD///+M/weyf/um
          "]]},
        Annotation[#, "Charting`Private`Tag#1"]& ], 
       TagBox[
        {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[2], 
         Opacity[1.], LineBox[CompressedData["
1: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

          "]]},
        Annotation[#, "Charting`Private`Tag#2"]& ]}, {}},
     {"WolframDynamicHighlight", <|
      "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
    StyleBox[
     DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
       Slot["HighlightElements"], 
       Slot["LayoutOptions"], 
       Slot["Meta"], 
       Charting`HighlightActionFunction["DynamicHighlight", {{{{}, {}, 
           Annotation[{
             Directive[
              Opacity[1.], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[2]], 
             Line[CompressedData["
1:eJw12nc41f//P3B7c7TwLi3ZSZKQ9XiqjBRSmSUlhBCZKUJFpZScY++99w4v
MyRCMjKyV/Y89vf1+V3X7/xxznW7rtc5z9frOe6P5/O6zknjJzdNqSgoKPzw
t/993hEYj3BIm8fM/t+LCh3vvNj7IWEe29+qF61zkBIN0zwseBY4jylGsPFV
ae9A4vkPn8x85jGZIwbKMoUbYGlcYHHLZR4rZZO7NDWyBmf8By4ji3ksIlOT
wTJmBRYw+mNnDOaxndGknaj6JcifEyP/d20eY4oclLSTWwTnowbtdHJ4e/eu
zPr1zoPM9VfpyyLzGHGhT84iYhZ2XdO9B4/OYzNzHaVOaf+gKuX3/Wa2eexV
w9Eml/UpeN29K1O6N4d9rT23/tZpElTpBQ8lLcxhkS8fvT59YgKYJbXmA4bm
sNon4ZPps2PQYuLa6NE+h133ql/I6hmFLwFxcdY1c5hkBv3Dvr8joF39w80g
fw5juPGiMW57GLgWV3VVEuYwrRSXlENnhqHv+HFxicA5jGerN7nCZgiiNVRZ
TvrMYX1x9AGfsEF46GY3zuoyhzmtPD3+/egg8KeHVm6az2Gp6/7kEcJfmP5T
EzqhP4eRmRu5vDb6IZNx1qFDbQ4TM77CL7fWB3bSHJpVsnOYQpy8qzBNH5BJ
5tRhR/Hfm/tqd0H9D5TV+vf7sM1hhxhJykFveuDlcmmRw94slrEjLZDS2A10
WqxWGkOz2Aw5smnTtgu+v5RUlm2fxdgKDBw/tHfCx0yjE4I1s1gWD92MpVwn
HGTJ7aBMwL8/ENj8hf83dMv0Zs6RZjH3q6oCdQkdEGZB867Xexbj1K5x33+6
A3jqdeQLzGcxGosqaW3lXzC++pIzVn8Wy8m2yPnY2w4pvCmLfmqzWBNtp6qp
YzuIeW0lmIvMYsKeMlvfC9pgJZvXQ/voLHb3v/a0jjttUPRX3eAS2yzmnxJn
b0/bBgry0WzcCzOYw6kErQjjVqCyapxkGJrBeivSexoOtUJd6FL1atsMpt/z
WDEg6CdcJ19x/pk3gxmUvKO6/7IF2AVstMriZ7DMF9E9EZvN8Es76HQKaQbj
6pz2sXRtBoO8qb9ezjNYNLf493rvH/DIxk9VUnYGyxKmDaNo/g7J1SbeA8Iz
mOK/PSrSve8wySFb6314BkOeXO01y41gjk1A18Y/bNnqY5iiYCNYsitKuRT/
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
etEzTUD///+M/weyf/um
              "]]}, "Charting`Private`Tag#1"], 
           Annotation[{
             Directive[
              Opacity[1.], 
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[2]], 
             Line[CompressedData["
1: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

              "]]}, "Charting`Private`Tag#2"]}}, {}}, <|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
         "LayoutOptions" -> <|
          "PanelPlotLayout" -> <||>, 
           "PlotRange" -> {{-0.9999998775510204, 3.9999011644595797`}, {-0.5, 
            2.3}}, "Frame" -> {{False, False}, {False, False}}, 
           "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
           "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
           GoldenRatio^(-1), "DefaultStyle" -> {
             Directive[
              Opacity[1.], 
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[2]], 
             Directive[
              Opacity[1.], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[2]]}, 
           "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), 
             "ScalingFunctions" -> {{Identity, Identity}, {
               Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
           False|>, 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           Plot, "GroupHighlight" -> False|>|>]]& )[<|
       "HighlightElements" -> <|
         "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
        "LayoutOptions" -> <|
         "PanelPlotLayout" -> <||>, 
          "PlotRange" -> {{-0.9999998775510204, 3.9999011644595797`}, {-0.5, 
           2.3}}, "Frame" -> {{False, False}, {False, False}}, 
          "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
          "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
          GoldenRatio^(-1), "DefaultStyle" -> {
            Directive[
             Opacity[1.], 
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[2]], 
            Directive[
             Opacity[1.], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2]]}, 
          "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& ), 
            "ScalingFunctions" -> {{Identity, Identity}, {
              Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>,
         "Meta" -> <|
         "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
          Plot, "GroupHighlight" -> False|>|>],
      ImageSizeCache->{{337.92886478594846`, 431.9819630150092}, {
       25.939823164516525`, 71.37758932762712}}],
     Selectable->False]},
   Annotation[{{{{}, {}, 
       Annotation[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2]], 
         Line[CompressedData["
1:eJw12nc41f//P3B7c7TwLi3ZSZKQ9XiqjBRSmSUlhBCZKUJFpZScY++99w4v
MyRCMjKyV/Y89vf1+V3X7/xxznW7rtc5z9frOe6P5/O6zknjJzdNqSgoKPzw
t/993hEYj3BIm8fM/t+LCh3vvNj7IWEe29+qF61zkBIN0zwseBY4jylGsPFV
ae9A4vkPn8x85jGZIwbKMoUbYGlcYHHLZR4rZZO7NDWyBmf8By4ji3ksIlOT
wTJmBRYw+mNnDOaxndGknaj6JcifEyP/d20eY4oclLSTWwTnowbtdHJ4e/eu
zPr1zoPM9VfpyyLzGHGhT84iYhZ2XdO9B4/OYzNzHaVOaf+gKuX3/Wa2eexV
w9Eml/UpeN29K1O6N4d9rT23/tZpElTpBQ8lLcxhkS8fvT59YgKYJbXmA4bm
sNon4ZPps2PQYuLa6NE+h133ql/I6hmFLwFxcdY1c5hkBv3Dvr8joF39w80g
fw5juPGiMW57GLgWV3VVEuYwrRSXlENnhqHv+HFxicA5jGerN7nCZgiiNVRZ
TvrMYX1x9AGfsEF46GY3zuoyhzmtPD3+/egg8KeHVm6az2Gp6/7kEcJfmP5T
EzqhP4eRmRu5vDb6IZNx1qFDbQ4TM77CL7fWB3bSHJpVsnOYQpy8qzBNH5BJ
5tRhR/Hfm/tqd0H9D5TV+vf7sM1hhxhJykFveuDlcmmRw94slrEjLZDS2A10
WqxWGkOz2Aw5smnTtgu+v5RUlm2fxdgKDBw/tHfCx0yjE4I1s1gWD92MpVwn
HGTJ7aBMwL8/ENj8hf83dMv0Zs6RZjH3q6oCdQkdEGZB867Xexbj1K5x33+6
A3jqdeQLzGcxGosqaW3lXzC++pIzVn8Wy8m2yPnY2w4pvCmLfmqzWBNtp6qp
YzuIeW0lmIvMYsKeMlvfC9pgJZvXQ/voLHb3v/a0jjttUPRX3eAS2yzmnxJn
b0/bBgry0WzcCzOYw6kErQjjVqCyapxkGJrBeivSexoOtUJd6FL1atsMpt/z
WDEg6CdcJ19x/pk3gxmUvKO6/7IF2AVstMriZ7DMF9E9EZvN8Es76HQKaQbj
6pz2sXRtBoO8qb9ezjNYNLf493rvH/DIxk9VUnYGyxKmDaNo/g7J1SbeA8Iz
mOK/PSrSve8wySFb6314BkOeXO01y41gjk1A18Y/bNnqY5iiYCNYsitKuRT/
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
etEzTUD///+M/weyf/um
          "]]}, "Charting`Private`Tag#1"], 
       Annotation[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[2]], 
         Line[CompressedData["
1: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

          "]]}, "Charting`Private`Tag#2"]}}, {}}, <|
    "HighlightElements" -> <|
      "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
     "LayoutOptions" -> <|
      "PanelPlotLayout" -> <||>, 
       "PlotRange" -> {{-0.9999998775510204, 3.9999011644595797`}, {-0.5, 
        2.3}}, "Frame" -> {{False, False}, {False, False}}, 
       "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
       "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
       GoldenRatio^(-1), "DefaultStyle" -> {
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[2]], 
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2]]}, 
       "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), 
         "ScalingFunctions" -> {{Identity, Identity}, {Identity, Identity}}|>,
        "Primitives" -> {}, "GCFlag" -> False|>, 
     "Meta" -> <|
      "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
       Plot, "GroupHighlight" -> False|>|>, "DynamicHighlight"]],
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-0.9999998775510204, 3.9999011644595797`}, {-0.5, 2.3}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.9364690181425734`*^9, 3.936469086210441*^9}, {
   3.936469136421233*^9, 3.936469164283023*^9}, 3.936469213183174*^9, 
   3.9364692774798613`*^9, {3.9364693156429768`*^9, 3.936469332314714*^9}, 
   3.936469368360224*^9, {3.936469433310804*^9, 3.9364694568606787`*^9}, {
   3.936471251176914*^9, 3.936471308547865*^9}, {3.9364713419031897`*^9, 
   3.9364713733699303`*^9}, {3.9364714346892853`*^9, 3.936471488705184*^9}, 
   3.936471703131806*^9, 3.936535529476221*^9},
 CellLabel->
  "Out[189]=",ExpressionUUID->"d7b851ce-5546-42af-8b50-c50b8b5b83cc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", 
  RowBox[{"m", ",", "b1", ",", "a", ",", "b", ",", "Betadist"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Simplify", "[", 
  RowBox[{"D", "[", 
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"-", 
      RowBox[{"Betadist", "[", 
       RowBox[{
        RowBox[{"m", 
         RowBox[{"(", 
          RowBox[{"x", "-", "b1"}], ")"}]}], ",", "a", ",", "b"}], "]"}]}]], 
    ",", "x"}], "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.936535269697916*^9, 3.9365354274355087`*^9}},
 CellLabel->
  "In[191]:=",ExpressionUUID->"fdc88a36-ae99-48d9-a5b3-42605843d05d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     RowBox[{"Betadist", "[", 
      RowBox[{
       RowBox[{"m", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "b1"}], "+", "x"}], ")"}]}], ",", "a", ",", "b"}], 
      "]"}]}]]}], " ", "m", " ", 
  RowBox[{
   SuperscriptBox["Betadist", 
    TagBox[
     RowBox[{"(", 
      RowBox[{"1", ",", "0", ",", "0"}], ")"}],
     Derivative],
    MultilineFunction->None], "[", 
   RowBox[{
    RowBox[{"m", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "b1"}], "+", "x"}], ")"}]}], ",", "a", ",", "b"}], 
   "]"}]}]], "Output",
 CellChangeTimes->{{3.936535403589562*^9, 3.936535427787868*^9}, 
   3.936535568429122*^9},
 CellLabel->
  "Out[192]=",ExpressionUUID->"ab64ecb7-fda4-4da6-8592-0d8d74c2f410"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Betadist", "[", 
   RowBox[{"x_", ",", "a_", ",", "b_"}], "]"}], ":=", 
  FractionBox[
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox["x", "a"], 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "-", "x"}], ")"}], "b"]}], ")"}], 
   RowBox[{"Beta", "[", 
    RowBox[{
     RowBox[{"a", "+", "1"}], ",", 
     RowBox[{"b", "+", "1"}]}], "]"}]]}], "\[IndentingNewLine]", 
 RowBox[{"FullSimplify", "[", 
  RowBox[{"D", "[", 
   RowBox[{
    RowBox[{"Betadist", "[", 
     RowBox[{"x", ",", "a", ",", "b"}], "]"}], ",", "x"}], "]"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.936535537342888*^9, 3.936535620234261*^9}, 
   3.936535694231639*^9, {3.936535831011344*^9, 3.9365358336591873`*^9}},
 CellLabel->
  "In[201]:=",ExpressionUUID->"fb543715-f36a-4a62-9554-10d55370bffe"],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "-", "x"}], ")"}], 
     RowBox[{
      RowBox[{"-", "1"}], "+", "b"}]], " ", 
    SuperscriptBox["x", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "a"}]], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"a", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "x"}], ")"}]}], "+", 
      RowBox[{"b", " ", "x"}]}], ")"}]}], 
   RowBox[{"Beta", "[", 
    RowBox[{
     RowBox[{"1", "+", "a"}], ",", 
     RowBox[{"1", "+", "b"}]}], "]"}]]}]], "Output",
 CellChangeTimes->{{3.936535564217854*^9, 3.936535578106407*^9}, {
   3.936535609676632*^9, 3.936535620686323*^9}, 3.936535694558103*^9, 
   3.9365358339971*^9},
 CellLabel->
  "Out[202]=",ExpressionUUID->"c4feb8bc-a3a6-4bd4-83e3-b26f4e88a8cb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{"D", "[", 
   RowBox[{
    RowBox[{"Betadist", "[", 
     RowBox[{
      RowBox[{"m", 
       RowBox[{"(", 
        RowBox[{"x", "-", "b1"}], ")"}]}], ",", "a", ",", "b"}], "]"}], ",", 
    "x"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{
  3.936536324958034*^9, {3.9365363634663353`*^9, 3.93653637470921*^9}},
 CellLabel->
  "In[207]:=",ExpressionUUID->"99746a0f-1e5e-42b9-8248-78939ec259e9"],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"m", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "b1"}], "+", "x"}], ")"}]}], ")"}], "a"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{"b1", " ", "m"}], "-", 
       RowBox[{"m", " ", "x"}]}], ")"}], 
     RowBox[{
      RowBox[{"-", "1"}], "+", "b"}]], " ", 
    RowBox[{"(", 
     RowBox[{"a", "+", 
      RowBox[{"a", " ", "b1", " ", "m"}], "+", 
      RowBox[{"b", " ", "b1", " ", "m"}], "-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"a", "+", "b"}], ")"}], " ", "m", " ", "x"}]}], ")"}]}], 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"b1", "-", "x"}], ")"}], " ", 
    RowBox[{"Beta", "[", 
     RowBox[{
      RowBox[{"1", "+", "a"}], ",", 
      RowBox[{"1", "+", "b"}]}], "]"}]}]]}]], "Output",
 CellChangeTimes->{3.936536376622867*^9},
 CellLabel->
  "Out[207]=",ExpressionUUID->"118651f7-9585-4698-86e3-c5ac944e7061"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"dBeta", "[", 
   RowBox[{"x_", ",", "a_", ",", "b_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"Betadist", "[", 
    RowBox[{"x", ",", "a", ",", "b"}], "]"}], 
   RowBox[{"(", 
    RowBox[{
     FractionBox["a", "x"], "-", 
     FractionBox["b", 
      RowBox[{"1", "-", "x"}]]}], ")"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"Simplify", "[", 
  RowBox[{"dBeta", "[", 
   RowBox[{
    RowBox[{"m", 
     RowBox[{"(", 
      RowBox[{"x", "-", "b1"}], ")"}]}], ",", "a", ",", "b"}], "]"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.936535986340807*^9, 3.9365360465358458`*^9}, {
  3.9365361360907183`*^9, 3.9365361429649057`*^9}, {3.936536241212974*^9, 
  3.936536333028191*^9}},
 CellLabel->
  "In[205]:=",ExpressionUUID->"99ba4754-a40b-42fd-8a97-01711e2156cd"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"m", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "b1"}], "+", "x"}], ")"}]}], ")"}], "a"], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{"b1", " ", "m"}], "-", 
      RowBox[{"m", " ", "x"}]}], ")"}], "b"], " ", 
   RowBox[{"(", 
    RowBox[{
     FractionBox["a", 
      RowBox[{"m", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "b1"}], "+", "x"}], ")"}]}]], "-", 
     FractionBox["b", 
      RowBox[{"1", "+", 
       RowBox[{"b1", " ", "m"}], "-", 
       RowBox[{"m", " ", "x"}]}]]}], ")"}]}], 
  RowBox[{"Beta", "[", 
   RowBox[{
    RowBox[{"1", "+", "a"}], ",", 
    RowBox[{"1", "+", "b"}]}], "]"}]]], "Output",
 CellChangeTimes->{{3.936536034952756*^9, 3.936536048030115*^9}, 
   3.936536334959724*^9},
 CellLabel->
  "Out[206]=",ExpressionUUID->"5f5f31d8-0215-445e-b2fa-a673102dab99"]
}, Open  ]]
},
WindowSize->{756, 916},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
Magnification:>1.25 Inherited,
FrontEndVersion->"14.0 for Mac OS X ARM (64-bit) (December 12, 2023)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"13f2906c-69f4-4a8e-8177-edd4d7bb3ab5"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 877, 23, 73, "Input",ExpressionUUID->"c8ec0fed-e2f0-4481-b58d-b4905674fe2e"],
Cell[CellGroupData[{
Cell[1460, 47, 539, 12, 38, "Input",ExpressionUUID->"c32b1a8d-9714-4942-9648-c17105c31e23"],
Cell[2002, 61, 878, 22, 83, "Output",ExpressionUUID->"d776ee8f-7a8b-498b-819f-df98d725e2c7"]
}, Open  ]],
Cell[2895, 86, 255, 4, 44, "Text",ExpressionUUID->"51616596-53f9-4009-ab83-f2dc0f0ee3f9"],
Cell[3153, 92, 482, 11, 38, "Input",ExpressionUUID->"b7de652f-60bf-42e9-9a62-43661619b158"],
Cell[CellGroupData[{
Cell[3660, 107, 340, 8, 38, "Input",ExpressionUUID->"ba9edf62-3884-4cc4-bb25-5a0774001ef1"],
Cell[4003, 117, 799, 24, 84, "Output",ExpressionUUID->"a06fa6a6-9c6f-4abc-bb5a-fad59c509946"]
}, Open  ]],
Cell[4817, 144, 159, 3, 44, "Text",ExpressionUUID->"f10f4618-b7d9-4b12-8fcf-b94405ebfda4"],
Cell[CellGroupData[{
Cell[5001, 151, 590, 17, 87, "Input",ExpressionUUID->"c89993ed-3db7-4b2c-a89e-2202be33f9fd"],
Cell[5594, 170, 722, 24, 70, "Output",ExpressionUUID->"94b14662-653b-4446-8e5b-f1b48adec09c"]
}, Open  ]],
Cell[6331, 197, 348, 8, 65, "Input",ExpressionUUID->"f83eb818-874a-4a32-a79a-4309de2fd980"],
Cell[6682, 207, 1483, 34, 90, "Input",ExpressionUUID->"8b3c98f0-b669-4d2c-9e09-470c8093fd65"],
Cell[CellGroupData[{
Cell[8190, 245, 750, 15, 38, "Input",ExpressionUUID->"1325a58a-1c07-41ec-afd1-43d7ea75a775"],
Cell[8943, 262, 1075, 28, 83, "Output",ExpressionUUID->"fc7dfeb9-5802-4929-b736-ae36657dcecb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[10055, 295, 340, 9, 38, "Input",ExpressionUUID->"857ee3cf-8195-4706-890f-006357de1a35"],
Cell[10398, 306, 1872, 61, 121, "Output",ExpressionUUID->"c2677352-78b8-483e-a034-d686891b3c92"]
}, Open  ]],
Cell[12285, 370, 986, 28, 70, "Input",ExpressionUUID->"6675db56-4d68-4d58-927d-d6c011634403"],
Cell[CellGroupData[{
Cell[13296, 402, 1010, 19, 38, "Input",ExpressionUUID->"bf5e950d-9346-476b-b599-23232c77f057"],
Cell[14309, 423, 48089, 835, 276, "Output",ExpressionUUID->"dd180bc4-7e12-420f-869a-ebe4908d933b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[62435, 1263, 2864, 66, 53, "Input",ExpressionUUID->"5f35e9bf-6704-456f-83ea-a6d764416dd7"],
Cell[65302, 1331, 2270, 45, 450, "Output",ExpressionUUID->"96a51d03-85bb-4caf-ba98-1ebf6f4f27f4"]
}, Open  ]],
Cell[67587, 1379, 206, 4, 44, "Text",ExpressionUUID->"020975a1-402b-4b21-9769-3a7259175249"],
Cell[CellGroupData[{
Cell[67818, 1387, 536, 11, 38, "Input",ExpressionUUID->"55293e28-543d-4d9d-b6fb-1459bd97c205"],
Cell[68357, 1400, 3331, 97, 163, "Output",ExpressionUUID->"f58b785c-af75-44d5-94d1-cfaf4cabc634"]
}, Open  ]],
Cell[71703, 1500, 159, 3, 44, "Text",ExpressionUUID->"42e961ef-1454-40bf-ba0b-6b1c5ca27976"],
Cell[71865, 1505, 1935, 58, 224, "Input",ExpressionUUID->"867a7973-f246-49ef-9f47-6283d076ab07"],
Cell[CellGroupData[{
Cell[73825, 1567, 323, 7, 38, "Input",ExpressionUUID->"2e209185-5ef9-45ed-afc5-af4e287ae2b8"],
Cell[74151, 1576, 8113, 269, 814, "Output",ExpressionUUID->"fd508433-b004-4548-94ea-600ed5627cdd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[82301, 1850, 305, 8, 37, "Input",ExpressionUUID->"14035265-251e-4b79-9b67-4e2e53e9e0b5"],
Cell[82609, 1860, 327, 9, 42, "Output",ExpressionUUID->"1379fe54-e346-4de3-9a73-349a9cef045c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[82973, 1874, 2839, 68, 221, "Input",ExpressionUUID->"a237cbd2-886c-4e82-abff-1b789e97a6a1"],
Cell[85815, 1944, 1329, 40, 119, "Output",ExpressionUUID->"d40e48ae-0e9d-4375-b679-5a1d8035c0af"]
}, Open  ]],
Cell[CellGroupData[{
Cell[87181, 1989, 528, 11, 37, "Input",ExpressionUUID->"e3369dba-7087-4d27-90a2-35901f5264f3"],
Cell[87712, 2002, 1292, 41, 72, "Output",ExpressionUUID->"6803036f-5bc5-4392-aba7-7f6ca07e340d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[89041, 2048, 536, 14, 66, "Input",ExpressionUUID->"e040b81c-3bec-4aaa-97a5-9989559b907f"],
Cell[89580, 2064, 612, 20, 43, "Output",ExpressionUUID->"570678d4-733d-4fca-ac8b-9f6c679480ca"]
}, Open  ]],
Cell[90207, 2087, 724, 21, 74, "Input",ExpressionUUID->"2ef5416a-640e-480d-9cc4-0fa7e03fdbe4"],
Cell[CellGroupData[{
Cell[90956, 2112, 591, 13, 37, "Input",ExpressionUUID->"09d32efe-0637-4a6e-a0d0-2276755999ae"],
Cell[91550, 2127, 1053, 31, 91, "Output",ExpressionUUID->"27c65a92-5b8f-4ca7-aceb-fdb24f1b82c5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[92640, 2163, 449, 11, 37, "Input",ExpressionUUID->"b030529f-ab51-44c1-aea3-f8d73a2f554d"],
Cell[93092, 2176, 1038, 31, 90, "Output",ExpressionUUID->"02923bb1-c12b-45b2-b5e0-9171cb35f7fd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[94167, 2212, 874, 25, 105, "Input",ExpressionUUID->"6edb5194-d701-4cd2-88a4-68c0ae7add0f"],
Cell[95044, 2239, 691, 22, 88, "Output",ExpressionUUID->"92b65432-2e47-4e5f-82d6-2c5988d1f961"]
}, Open  ]],
Cell[CellGroupData[{
Cell[95772, 2266, 1869, 54, 235, "Input",ExpressionUUID->"d7ee2e85-2e45-4b0e-a85f-8ffa8eb834d3"],
Cell[97644, 2322, 624, 10, 42, "Output",ExpressionUUID->"583a1fce-606d-4469-99c9-a6422dc1a129"],
Cell[98271, 2334, 622, 10, 42, "Output",ExpressionUUID->"f8d4379c-06f9-4587-865b-0fef7644e7f7"],
Cell[98896, 2346, 623, 10, 58, "Output",ExpressionUUID->"2e3d8858-9d70-4ef3-b186-5a561780f0ae"],
Cell[99522, 2358, 617, 10, 42, "Output",ExpressionUUID->"0ee91981-cd37-46b1-8ccf-cc33071fe4df"],
Cell[100142, 2370, 87170, 1489, 307, "Output",ExpressionUUID->"d7b851ce-5546-42af-8b50-c50b8b5b83cc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[187349, 3864, 618, 17, 66, "Input",ExpressionUUID->"fdc88a36-ae99-48d9-a5b3-42605843d05d"],
Cell[187970, 3883, 830, 28, 43, "Output",ExpressionUUID->"ab64ecb7-fda4-4da6-8592-0d8d74c2f410"]
}, Open  ]],
Cell[CellGroupData[{
Cell[188837, 3916, 824, 24, 97, "Input",ExpressionUUID->"fb543715-f36a-4a62-9554-10d55370bffe"],
Cell[189664, 3942, 842, 27, 66, "Output",ExpressionUUID->"c4feb8bc-a3a6-4bd4-83e3-b26f4e88a8cb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[190543, 3974, 450, 13, 37, "Input",ExpressionUUID->"99746a0f-1e5e-42b9-8248-78939ec259e9"],
Cell[190996, 3989, 1011, 33, 86, "Output",ExpressionUUID->"118651f7-9585-4698-86e3-c5ac944e7061"]
}, Open  ]],
Cell[CellGroupData[{
Cell[192044, 4027, 792, 23, 87, "Input",ExpressionUUID->"99ba4754-a40b-42fd-8a97-01711e2156cd"],
Cell[192839, 4052, 959, 32, 76, "Output",ExpressionUUID->"5f5f31d8-0215-445e-b2fa-a673102dab99"]
}, Open  ]]
}
]
*)

